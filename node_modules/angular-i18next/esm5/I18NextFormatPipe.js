/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Inject, Injectable, Pipe } from '@angular/core';
import { I18NEXT_SERVICE } from './I18NEXT_TOKENS';
var I18NextFormatPipe = /** @class */ (function () {
    function I18NextFormatPipe(translateI18Next) {
        this.translateI18Next = translateI18Next;
    }
    /**
     * @param {?} value
     * @param {?} options
     * @return {?}
     */
    I18NextFormatPipe.prototype.transform = /**
     * @param {?} value
     * @param {?} options
     * @return {?}
     */
    function (value, options) {
        /** @type {?} */
        var opts = typeof (options) === 'string' ? { format: options } : options;
        return this.translateI18Next.format(value, opts.format, opts.lng);
    };
    I18NextFormatPipe.decorators = [
        { type: Injectable },
        { type: Pipe, args: [{
                    name: 'i18nextFormat'
                },] }
    ];
    /** @nocollapse */
    I18NextFormatPipe.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [I18NEXT_SERVICE,] }] }
    ]; };
    return I18NextFormatPipe;
}());
export { I18NextFormatPipe };
if (false) {
    /**
     * @type {?}
     * @private
     */
    I18NextFormatPipe.prototype.translateI18Next;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSTE4TmV4dEZvcm1hdFBpcGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLWkxOG5leHQvIiwic291cmNlcyI6WyJJMThOZXh0Rm9ybWF0UGlwZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQUV4RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFHbkQ7SUFNRSwyQkFDcUMsZ0JBQXFDO1FBQXJDLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBcUI7SUFDdkUsQ0FBQzs7Ozs7O0lBRUcscUNBQVM7Ozs7O0lBQWhCLFVBQWlCLEtBQVUsRUFBRSxPQUF3Qjs7WUFDL0MsSUFBSSxHQUFRLE9BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxRQUFRLENBQUMsQ0FBQyxDQUFDLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBRSxDQUFDLENBQUMsQ0FBQyxPQUFPO1FBQzVFLE9BQU8sSUFBSSxDQUFDLGdCQUFnQixDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLE1BQU0sRUFBRSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUM7SUFDcEUsQ0FBQzs7Z0JBYkYsVUFBVTtnQkFDVixJQUFJLFNBQUM7b0JBQ0YsSUFBSSxFQUFFLGVBQWU7aUJBQ3hCOzs7O2dEQUlNLE1BQU0sU0FBQyxlQUFlOztJQU83Qix3QkFBQztDQUFBLEFBZEQsSUFjQztTQVZZLGlCQUFpQjs7Ozs7O0lBR3hCLDZDQUFzRSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdCwgSW5qZWN0YWJsZSwgUGlwZSwgUGlwZVRyYW5zZm9ybSB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgSTE4TkVYVF9TRVJWSUNFIH0gZnJvbSAnLi9JMThORVhUX1RPS0VOUyc7XHJcbmltcG9ydCB7IElUcmFuc2xhdGlvblNlcnZpY2UgfSBmcm9tICcuL0lUcmFuc2xhdGlvblNlcnZpY2UnO1xyXG5cclxuQEluamVjdGFibGUoKVxyXG5AUGlwZSh7XHJcbiAgICBuYW1lOiAnaTE4bmV4dEZvcm1hdCdcclxufSlcclxuZXhwb3J0IGNsYXNzIEkxOE5leHRGb3JtYXRQaXBlIGltcGxlbWVudHMgUGlwZVRyYW5zZm9ybSB7XHJcblxyXG4gIGNvbnN0cnVjdG9yKFxyXG4gICAgICBASW5qZWN0KEkxOE5FWFRfU0VSVklDRSkgcHJpdmF0ZSB0cmFuc2xhdGVJMThOZXh0OiBJVHJhbnNsYXRpb25TZXJ2aWNlXHJcbiAgKSB7fVxyXG5cclxuICBwdWJsaWMgdHJhbnNmb3JtKHZhbHVlOiBhbnksIG9wdGlvbnM6IE9iamVjdCB8IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICBsZXQgb3B0czogYW55ID0gdHlwZW9mKG9wdGlvbnMpID09PSAnc3RyaW5nJyA/IHsgZm9ybWF0OiBvcHRpb25zIH0gOiBvcHRpb25zO1xyXG4gICAgcmV0dXJuIHRoaXMudHJhbnNsYXRlSTE4TmV4dC5mb3JtYXQodmFsdWUsIG9wdHMuZm9ybWF0LCBvcHRzLmxuZyk7XHJcbiAgfVxyXG59XHJcbiJdfQ==