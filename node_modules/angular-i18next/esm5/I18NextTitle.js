/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Injectable, Inject } from '@angular/core';
import { Title, DOCUMENT } from '@angular/platform-browser';
import { I18NextPipe } from './I18NextPipe';
var I18NextTitle = /** @class */ (function (_super) {
    tslib_1.__extends(I18NextTitle, _super);
    function I18NextTitle(i18nextPipe, doc) {
        var _this = _super.call(this, doc) || this;
        _this.i18nextPipe = i18nextPipe;
        return _this;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    I18NextTitle.prototype.setTitle = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return _super.prototype.setTitle.call(this, this.translate(value));
    };
    /**
     * @private
     * @param {?} text
     * @return {?}
     */
    I18NextTitle.prototype.translate = /**
     * @private
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return this.i18nextPipe.transform(text, { format: 'cap' });
    };
    I18NextTitle.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    I18NextTitle.ctorParameters = function () { return [
        { type: I18NextPipe },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    return I18NextTitle;
}(Title));
export { I18NextTitle };
if (false) {
    /**
     * @type {?}
     * @private
     */
    I18NextTitle.prototype.i18nextPipe;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSTE4TmV4dFRpdGxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vYW5ndWxhci1pMThuZXh0LyIsInNvdXJjZXMiOlsiSTE4TmV4dFRpdGxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDbkQsT0FBTyxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTVDO0lBQ2tDLHdDQUFLO0lBQ3BDLHNCQUFvQixXQUF3QixFQUFvQixHQUFHO1FBQW5FLFlBQ0Msa0JBQU0sR0FBRyxDQUFDLFNBQ1Y7UUFGbUIsaUJBQVcsR0FBWCxXQUFXLENBQWE7O0lBRTVDLENBQUM7Ozs7O0lBRUQsK0JBQVE7Ozs7SUFBUixVQUFTLEtBQWE7UUFDckIsT0FBTyxpQkFBTSxRQUFRLFlBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO0lBQzlDLENBQUM7Ozs7OztJQUVPLGdDQUFTOzs7OztJQUFqQixVQUFrQixJQUFZO1FBQzVCLE9BQU8sSUFBSSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsSUFBSSxFQUFFLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBQyxDQUFDLENBQUM7SUFDNUQsQ0FBQzs7Z0JBWkgsVUFBVTs7OztnQkFGRixXQUFXO2dEQUk4QixNQUFNLFNBQUMsUUFBUTs7SUFXakUsbUJBQUM7Q0FBQSxBQWJELENBQ2tDLEtBQUssR0FZdEM7U0FaWSxZQUFZOzs7Ozs7SUFDVixtQ0FBZ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlLCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVGl0bGUsIERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvcGxhdGZvcm0tYnJvd3Nlcic7XHJcbmltcG9ydCB7IEkxOE5leHRQaXBlIH0gZnJvbSAnLi9JMThOZXh0UGlwZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBJMThOZXh0VGl0bGUgZXh0ZW5kcyBUaXRsZSB7XHJcbiAgIGNvbnN0cnVjdG9yKHByaXZhdGUgaTE4bmV4dFBpcGU6IEkxOE5leHRQaXBlLCBASW5qZWN0KERPQ1VNRU5UKSBkb2MpIHtcclxuICAgIHN1cGVyKGRvYyk7XHJcbiAgIH1cclxuXHJcbiAgIHNldFRpdGxlKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgIHJldHVybiBzdXBlci5zZXRUaXRsZSh0aGlzLnRyYW5zbGF0ZSh2YWx1ZSkpO1xyXG4gICB9XHJcblxyXG4gICBwcml2YXRlIHRyYW5zbGF0ZSh0ZXh0OiBzdHJpbmcpIHtcclxuICAgICByZXR1cm4gdGhpcy5pMThuZXh0UGlwZS50cmFuc2Zvcm0odGV4dCwgeyBmb3JtYXQ6ICdjYXAnfSk7XHJcbiAgIH1cclxufVxyXG4iXX0=