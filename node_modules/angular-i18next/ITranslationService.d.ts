import { ITranslationEvents } from './ITranslationEvents';
export interface ITranslationService {
    language: string;
    languages: string[];
    events: ITranslationEvents;
    options: any;
    use(plugin: any): any;
    init(options?: any): Promise<any>;
    t(key: string | string[], options?: any): string;
    format(value: any, format: string, lng: string): string;
    exists(key: any, options: any): any;
    getFixedT(lng: any, ns: any): any;
    setDefaultNamespace(ns: string): any;
    dir(lng: string): string;
    changeLanguage(lng: string): Promise<any>;
    loadNamespaces(namespaces: string[]): Promise<any>;
    reloadResources(...params: any[]): any;
    getResource(lng: any, ns: any, key: any, options: any): any;
    addResource(lng: any, ns: any, key: any, value: any, options: any): any;
    addResources(lng: any, ns: any, resources: any): any;
    addResourceBundle(lng: any, ns: any, resources: any, deep: any, overwrite: any): any;
    hasResourceBundle(lng: any, ns: any): any;
    getResourceBundle(lng: any, ns: any): any;
    removeResourceBundle(lng: any, ns: any): any;
}
