import i18n__default from 'i18next';
import { BehaviorSubject, Subject } from 'rxjs';
import { __extends, __spread } from 'tslib';
import { InjectionToken, Inject, Injectable, Pipe, NgModule } from '@angular/core';
import { Title, DOCUMENT } from '@angular/platform-browser';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var I18NEXT_SCOPE = new InjectionToken('I18NEXT_SCOPE');
/** @type {?} */
var I18NEXT_NAMESPACE = new InjectionToken('I18NEXT_NAMESPACE');
/** @type {?} */
var I18NEXT_SERVICE = new InjectionToken('I18NEXT_SERVICE');
/** @type {?} */
var I18NEXT_NAMESPACE_RESOLVER = new InjectionToken('I18NEXT_NAMESPACE_RESOLVER');
/** @type {?} */
var I18NEXT_ERROR_HANDLING_STRATEGY = new InjectionToken('I18NEXT_ERROR_HANDLING_STRATEGY');

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var I18NextPipe = /** @class */ (function () {
    function I18NextPipe(translateI18Next, ns, scope) {
        this.translateI18Next = translateI18Next;
        this.ns = ns;
        this.scope = scope;
    }
    /**
     * @param {?} key
     * @param {?=} options
     * @return {?}
     */
    I18NextPipe.prototype.transform = /**
     * @param {?} key
     * @param {?=} options
     * @return {?}
     */
    function (key, options) {
        options = this.prepareOptions(options);
        /** @type {?} */
        var i18nOpts = this.translateI18Next.options;
        if (options.prependScope === undefined || options.prependScope === true) {
            if (this.scope) {
                key = this.prependScope(key, this.scope, i18nOpts.keySeparator, i18nOpts.nsSeparator);
            }
        }
        if (options.prependNamespace === undefined || options.prependNamespace === true) {
            if (this.ns) {
                key = this.prependNamespace(key, this.ns, i18nOpts.nsSeparator);
            }
        }
        /** @type {?} */
        var result = this.translateI18Next.t(key, options);
        if (options.format) {
            if (result) {
                result = this.translateI18Next
                    .format(result, options.format, this.translateI18Next.language);
            }
        }
        return result;
    };
    /**
     * @private
     * @param {?} key
     * @param {?} scope
     * @param {?} keySeparator
     * @param {?} nsSeparator
     * @return {?}
     */
    I18NextPipe.prototype.prependScope = /**
     * @private
     * @param {?} key
     * @param {?} scope
     * @param {?} keySeparator
     * @param {?} nsSeparator
     * @return {?}
     */
    function (key, scope, keySeparator, nsSeparator) {
        var _this = this;
        if (typeof (key) === 'string') {
            key = [key];
        }
        if (typeof (scope) === 'string') {
            scope = [scope];
        }
        /** @type {?} */
        var keysWithScope = [];
        var _loop_1 = function (i) {
            /** @type {?} */
            var k = key[i];
            if (!this_1.keyContainsNsSeparator(k, nsSeparator)) { // Do not set scope, if key contains a namespace
                keysWithScope.push.apply(// Do not set scope, if key contains a namespace
                keysWithScope, __spread(scope.map((/**
                 * @param {?} sc
                 * @return {?}
                 */
                function (sc) { return _this.joinStrings(keySeparator, sc, k); }))));
            }
            keysWithScope.push(k);
        };
        var this_1 = this;
        for (var i = 0; i < key.length; i++) {
            _loop_1(i);
        }
        return keysWithScope;
    };
    /**
     * @private
     * @param {?} key
     * @param {?} ns
     * @param {?} nsSeparator
     * @return {?}
     */
    I18NextPipe.prototype.prependNamespace = /**
     * @private
     * @param {?} key
     * @param {?} ns
     * @param {?} nsSeparator
     * @return {?}
     */
    function (key, ns, nsSeparator) {
        var _this = this;
        if (typeof (key) === 'string') {
            key = [key];
        }
        if (typeof (ns) === 'string') {
            ns = [ns];
        }
        /** @type {?} */
        var keysWithNamespace = [];
        var _loop_2 = function (i) {
            /** @type {?} */
            var k = key[i];
            if (!this_2.keyContainsNsSeparator(k, nsSeparator)) { // Do not set namespace, if key contains a namespace
                keysWithNamespace.push.apply(// Do not set namespace, if key contains a namespace
                keysWithNamespace, __spread(ns.map((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) { return _this.joinStrings(nsSeparator, n, k); }))));
            }
            keysWithNamespace.push(k);
        };
        var this_2 = this;
        for (var i = 0; i < key.length; i++) {
            _loop_2(i);
        }
        return keysWithNamespace;
    };
    /**
     * @private
     * @param {?} separator
     * @param {...?} str
     * @return {?}
     */
    I18NextPipe.prototype.joinStrings = /**
     * @private
     * @param {?} separator
     * @param {...?} str
     * @return {?}
     */
    function (separator) {
        var str = [];
        for (var _i = 1; _i < arguments.length; _i++) {
            str[_i - 1] = arguments[_i];
        }
        return __spread(str).join(separator);
    };
    /**
     * @private
     * @param {?} key
     * @param {?} nsSeparator
     * @return {?}
     */
    I18NextPipe.prototype.keyContainsNsSeparator = /**
     * @private
     * @param {?} key
     * @param {?} nsSeparator
     * @return {?}
     */
    function (key, nsSeparator) {
        return key.indexOf(nsSeparator) !== -1;
    };
    /**
     * @private
     * @param {?} options
     * @return {?}
     */
    I18NextPipe.prototype.prepareOptions = /**
     * @private
     * @param {?} options
     * @return {?}
     */
    function (options) {
        options = options || {};
        if (options.context != null)
            options.context = options.context.toString();
        return options;
    };
    I18NextPipe.decorators = [
        { type: Injectable },
        { type: Pipe, args: [{
                    name: 'i18next'
                },] }
    ];
    /** @nocollapse */
    I18NextPipe.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [I18NEXT_SERVICE,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [I18NEXT_NAMESPACE,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [I18NEXT_SCOPE,] }] }
    ]; };
    return I18NextPipe;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var I18NextCapPipe = /** @class */ (function (_super) {
    __extends(I18NextCapPipe, _super);
    function I18NextCapPipe(translateI18Next, ns, scope) {
        return _super.call(this, translateI18Next, ns, scope) || this;
    }
    /**
     * @param {?} key
     * @param {?=} options
     * @return {?}
     */
    I18NextCapPipe.prototype.transform = /**
     * @param {?} key
     * @param {?=} options
     * @return {?}
     */
    function (key, options) {
        options = options || {};
        options.format = 'cap';
        return _super.prototype.transform.call(this, key, options);
    };
    I18NextCapPipe.decorators = [
        { type: Injectable },
        { type: Pipe, args: [{
                    name: 'i18nextCap'
                },] }
    ];
    /** @nocollapse */
    I18NextCapPipe.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [I18NEXT_SERVICE,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [I18NEXT_NAMESPACE,] }] },
        { type: undefined, decorators: [{ type: Inject, args: [I18NEXT_SCOPE,] }] }
    ]; };
    return I18NextCapPipe;
}(I18NextPipe));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NativeErrorHandlingStrategy = /** @class */ (function () {
    function NativeErrorHandlingStrategy() {
    }
    /**
     * @param {?} resolve
     * @param {?} reject
     * @return {?}
     */
    NativeErrorHandlingStrategy.prototype.handle = /**
     * @param {?} resolve
     * @param {?} reject
     * @return {?}
     */
    function (resolve, reject) {
        return (/**
         * @param {?} err
         * @param {?=} t
         * @return {?}
         */
        function (err, t) {
            /** @type {?} */
            var result = {
                err: err,
                t: t
            };
            resolve(result);
        });
    };
    return NativeErrorHandlingStrategy;
}());
var StrictErrorHandlingStrategy = /** @class */ (function () {
    function StrictErrorHandlingStrategy() {
    }
    /**
     * @param {?} resolve
     * @param {?} reject
     * @return {?}
     */
    StrictErrorHandlingStrategy.prototype.handle = /**
     * @param {?} resolve
     * @param {?} reject
     * @return {?}
     */
    function (resolve, reject) {
        return (/**
         * @param {?} err
         * @param {?=} t
         * @return {?}
         */
        function (err, t) {
            /** @type {?} */
            var result = {
                err: err,
                t: t
            };
            if (!err) {
                resolve(result);
                return;
            }
            reject(err);
        });
    };
    return StrictErrorHandlingStrategy;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var I18NextFormatPipe = /** @class */ (function () {
    function I18NextFormatPipe(translateI18Next) {
        this.translateI18Next = translateI18Next;
    }
    /**
     * @param {?} value
     * @param {?} options
     * @return {?}
     */
    I18NextFormatPipe.prototype.transform = /**
     * @param {?} value
     * @param {?} options
     * @return {?}
     */
    function (value, options) {
        /** @type {?} */
        var opts = typeof (options) === 'string' ? { format: options } : options;
        return this.translateI18Next.format(value, opts.format, opts.lng);
    };
    I18NextFormatPipe.decorators = [
        { type: Injectable },
        { type: Pipe, args: [{
                    name: 'i18nextFormat'
                },] }
    ];
    /** @nocollapse */
    I18NextFormatPipe.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [I18NEXT_SERVICE,] }] }
    ]; };
    return I18NextFormatPipe;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var I18NextEvents = /** @class */ (function () {
    function I18NextEvents() {
        this.initialized = new BehaviorSubject(false);
        this.loaded = new BehaviorSubject(false);
        this.failedLoading = new Subject();
        this.missingKey = new Subject();
        this.added = new Subject();
        this.removed = new Subject();
        this.languageChanged = new BehaviorSubject(null);
    }
    return I18NextEvents;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
var i18next = i18n__default;
var I18NextService = /** @class */ (function () {
    function I18NextService(errorHandlingStrategy) {
        this.errorHandlingStrategy = errorHandlingStrategy;
        this.events = new I18NextEvents();
        this.language = '';
        this.languages = [];
    }
    Object.defineProperty(I18NextService.prototype, "options", {
        get: /**
         * @return {?}
         */
        function () {
            return i18next.options;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @template THIS
     * @this {THIS}
     * @param {?} plugin
     * @return {THIS}
     */
    I18NextService.prototype.use = /**
     * @template THIS
     * @this {THIS}
     * @param {?} plugin
     * @return {THIS}
     */
    function (plugin) {
        i18next.use.call(i18next, plugin);
        return (/** @type {?} */ (this));
    };
    /**
     * @param {?=} options
     * @return {?}
     */
    I18NextService.prototype.init = /**
     * @param {?=} options
     * @return {?}
     */
    function (options) {
        var _this = this;
        options = options || {};
        this.subscribeEvents();
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            i18next.init.call(i18next, Object.assign({}, options), _this.errorHandlingStrategy.handle(resolve, reject));
        }));
    };
    /**
     * @param {?} key
     * @param {?=} options
     * @return {?}
     */
    I18NextService.prototype.t = /**
     * @param {?} key
     * @param {?=} options
     * @return {?}
     */
    function (key, options) {
        options = options || {};
        return i18next.t.call(i18next, (/** @type {?} */ (key)), options);
    };
    /**
     * @param {?} value
     * @param {?} format
     * @param {?} lng
     * @return {?}
     */
    I18NextService.prototype.format = /**
     * @param {?} value
     * @param {?} format
     * @param {?} lng
     * @return {?}
     */
    function (value, format, lng) {
        return i18next.format.call(i18next, value, format, lng);
    };
    /**
     * @param {?} key
     * @param {?} options
     * @return {?}
     */
    I18NextService.prototype.exists = /**
     * @param {?} key
     * @param {?} options
     * @return {?}
     */
    function (key, options) {
        return i18next.exists.call(i18next, key, options);
    };
    /**
     * @param {?} lng
     * @param {?} ns
     * @return {?}
     */
    I18NextService.prototype.getFixedT = /**
     * @param {?} lng
     * @param {?} ns
     * @return {?}
     */
    function (lng, ns) {
        return i18next.getFixedT.call(i18next, lng, ns);
    };
    /**
     * @param {?} ns
     * @return {?}
     */
    I18NextService.prototype.setDefaultNamespace = /**
     * @param {?} ns
     * @return {?}
     */
    function (ns) {
        i18next.setDefaultNamespace.call(i18next, ns);
    };
    /**
     * @param {?=} lng
     * @return {?}
     */
    I18NextService.prototype.dir = /**
     * @param {?=} lng
     * @return {?}
     */
    function (lng) {
        if (lng === void 0) { lng = undefined; }
        return i18next.dir.call(i18next, lng);
    };
    /**
     * @param {?} lng
     * @return {?}
     */
    I18NextService.prototype.changeLanguage = /**
     * @param {?} lng
     * @return {?}
     */
    function (lng) {
        var _this = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            i18next.changeLanguage.call(i18next, lng, _this.errorHandlingStrategy.handle(resolve, reject));
        }));
    };
    /**
     * @param {?} namespaces
     * @return {?}
     */
    I18NextService.prototype.loadNamespaces = /**
     * @param {?} namespaces
     * @return {?}
     */
    function (namespaces) {
        var _this = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            i18next.loadNamespaces.call(i18next, namespaces, _this.errorHandlingStrategy.handle(resolve, reject));
        }));
    };
    /**
     * @param {?} lngs
     * @param {?} callback
     * @return {?}
     */
    I18NextService.prototype.loadLanguages = /**
     * @param {?} lngs
     * @param {?} callback
     * @return {?}
     */
    function (lngs, callback) {
        var _this = this;
        return new Promise((/**
         * @param {?} resolve
         * @param {?} reject
         * @return {?}
         */
        function (resolve, reject) {
            i18next.loadNamespaces.call(i18next, lngs, _this.errorHandlingStrategy.handle(resolve, reject));
        }));
    };
    //#region resource handling
    //#region resource handling
    /**
     * @param {...?} params
     * @return {?}
     */
    I18NextService.prototype.reloadResources = 
    //#region resource handling
    /**
     * @param {...?} params
     * @return {?}
     */
    function () {
        var params = [];
        for (var _i = 0; _i < arguments.length; _i++) {
            params[_i] = arguments[_i];
        }
        i18next.reloadResources.apply(i18next, params);
    };
    /**
     * @param {?} lng
     * @param {?} ns
     * @param {?} key
     * @param {?} options
     * @return {?}
     */
    I18NextService.prototype.getResource = /**
     * @param {?} lng
     * @param {?} ns
     * @param {?} key
     * @param {?} options
     * @return {?}
     */
    function (lng, ns, key, options) {
        return i18next.getResource.call(i18next, lng, ns, key, options);
    };
    /**
     * @param {?} lng
     * @param {?} ns
     * @param {?} key
     * @param {?} value
     * @param {?} options
     * @return {?}
     */
    I18NextService.prototype.addResource = /**
     * @param {?} lng
     * @param {?} ns
     * @param {?} key
     * @param {?} value
     * @param {?} options
     * @return {?}
     */
    function (lng, ns, key, value, options) {
        i18next.addResource.call(i18next, lng, ns, key, value, options);
    };
    /**
     * @param {?} lng
     * @param {?} ns
     * @param {?} resources
     * @return {?}
     */
    I18NextService.prototype.addResources = /**
     * @param {?} lng
     * @param {?} ns
     * @param {?} resources
     * @return {?}
     */
    function (lng, ns, resources) {
        i18next.addResources.call(i18next, lng, ns, resources);
    };
    /**
     * @param {?} lng
     * @param {?} ns
     * @param {?} resources
     * @param {?} deep
     * @param {?} overwrite
     * @return {?}
     */
    I18NextService.prototype.addResourceBundle = /**
     * @param {?} lng
     * @param {?} ns
     * @param {?} resources
     * @param {?} deep
     * @param {?} overwrite
     * @return {?}
     */
    function (lng, ns, resources, deep, overwrite) {
        i18next.addResourceBundle.call(i18next, lng, ns, resources, deep, overwrite);
    };
    /**
     * @param {?} lng
     * @param {?} ns
     * @return {?}
     */
    I18NextService.prototype.hasResourceBundle = /**
     * @param {?} lng
     * @param {?} ns
     * @return {?}
     */
    function (lng, ns) {
        return i18next.hasResourceBundle.call(i18next, lng, ns);
    };
    /**
     * @param {?} lng
     * @param {?} ns
     * @return {?}
     */
    I18NextService.prototype.getResourceBundle = /**
     * @param {?} lng
     * @param {?} ns
     * @return {?}
     */
    function (lng, ns) {
        return i18next.getResourceBundle.call(i18next, lng, ns);
    };
    /**
     * @param {?} lng
     * @param {?} ns
     * @return {?}
     */
    I18NextService.prototype.removeResourceBundle = /**
     * @param {?} lng
     * @param {?} ns
     * @return {?}
     */
    function (lng, ns) {
        i18next.removeResourceBundle.call(i18next, lng, ns);
    };
    //#endregion
    //#endregion
    /**
     * @private
     * @return {?}
     */
    I18NextService.prototype.subscribeEvents = 
    //#endregion
    /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        i18next.on.call(i18next, 'initialized', (/**
         * @param {?} options
         * @return {?}
         */
        function (options) {
            _this.language = i18next.language;
            _this.languages = i18next.languages;
            _this.events.initialized.next(options);
        }));
        i18next.on.call(i18next, 'loaded', (/**
         * @param {?} loaded
         * @return {?}
         */
        function (loaded) { return _this.events.loaded.next(loaded); }));
        i18next.on.call(i18next, 'failedLoading', (/**
         * @param {?} lng
         * @param {?} ns
         * @param {?} msg
         * @return {?}
         */
        function (lng, ns, msg) { return _this.events.failedLoading.next({ lng: lng, ns: ns, msg: msg }); }));
        i18next.on.call(i18next, 'languageChanged', (/**
         * @param {?} lng
         * @return {?}
         */
        function (lng) {
            _this.language = i18next.language;
            _this.languages = i18next.languages;
            _this.events.languageChanged.next(lng);
        }));
        i18next.on.call(i18next, 'missingKey', (/**
         * @param {?} lngs
         * @param {?} namespace
         * @param {?} key
         * @param {?} res
         * @return {?}
         */
        function (lngs, namespace, key, res) { return _this.events.missingKey.next({ lngs: lngs, namespace: namespace, key: key, res: res }); }));
        i18next.on.call(i18next, 'added', (/**
         * @param {?} lng
         * @param {?} ns
         * @return {?}
         */
        function (lng, ns) { return _this.events.added.next({ lng: lng, ns: ns }); }));
        i18next.on.call(i18next, 'removed', (/**
         * @param {?} lng
         * @param {?} ns
         * @return {?}
         */
        function (lng, ns) { return _this.events.removed.next({ lng: lng, ns: ns }); }));
    };
    I18NextService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    I18NextService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [I18NEXT_ERROR_HANDLING_STRATEGY,] }] }
    ]; };
    return I18NextService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var I18NextTitle = /** @class */ (function (_super) {
    __extends(I18NextTitle, _super);
    function I18NextTitle(i18nextPipe, doc) {
        var _this = _super.call(this, doc) || this;
        _this.i18nextPipe = i18nextPipe;
        return _this;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    I18NextTitle.prototype.setTitle = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        return _super.prototype.setTitle.call(this, this.translate(value));
    };
    /**
     * @private
     * @param {?} text
     * @return {?}
     */
    I18NextTitle.prototype.translate = /**
     * @private
     * @param {?} text
     * @return {?}
     */
    function (text) {
        return this.i18nextPipe.transform(text, { format: 'cap' });
    };
    I18NextTitle.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    I18NextTitle.ctorParameters = function () { return [
        { type: I18NextPipe },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }
    ]; };
    return I18NextTitle;
}(Title));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/**
 * @param {?} activatedRouteSnapshot
 * @param {?} routerStateSnapshot
 * @return {?}
 */
function resolver(activatedRouteSnapshot, routerStateSnapshot) {
    /** @type {?} */
    var namespaces = [];
    namespaces = activatedRouteSnapshot.data && activatedRouteSnapshot.data.i18nextNamespaces || namespaces;
    return this.loadNamespaces(namespaces.filter((/**
     * @param {?} n
     * @return {?}
     */
    function (n) { return n; })));
}
/**
 * @param {?} i18next
 * @return {?}
 */
function i18nextNamespaceResolverFactory(i18next) {
    return resolver.bind(i18next);
}
var I18NextModule = /** @class */ (function () {
    function I18NextModule() {
    }
    /**
     * @param {?=} params
     * @return {?}
     */
    I18NextModule.forRoot = /**
     * @param {?=} params
     * @return {?}
     */
    function (params) {
        if (params === void 0) { params = {}; }
        return {
            ngModule: I18NextModule,
            providers: [
                {
                    provide: I18NEXT_SERVICE,
                    useClass: I18NextService
                },
                {
                    provide: I18NEXT_ERROR_HANDLING_STRATEGY,
                    useClass: params.errorHandlingStrategy || NativeErrorHandlingStrategy
                },
                I18NextService,
                I18NextPipe,
                I18NextCapPipe,
                I18NextFormatPipe,
                I18NextTitle,
                {
                    provide: I18NEXT_NAMESPACE_RESOLVER,
                    useFactory: i18nextNamespaceResolverFactory,
                    deps: [I18NEXT_SERVICE]
                }
            ]
        };
    };
    /**
     * @param {?=} customFormat
     * @return {?}
     */
    I18NextModule.interpolationFormat = /**
     * @param {?=} customFormat
     * @return {?}
     */
    function (customFormat) {
        if (customFormat === void 0) { customFormat = null; }
        /**
         * @param {?} value
         * @param {?} format
         * @param {?} lng
         * @return {?}
         */
        function formatDelegate(value, format, lng) {
            /** @type {?} */
            var formatedValue = defaultInterpolationFormat(value, format, lng);
            if (customFormat === null)
                return formatedValue;
            return customFormat(formatedValue, format, lng);
        }
        return formatDelegate;
    };
    I18NextModule.decorators = [
        { type: NgModule, args: [{
                    providers: [
                        {
                            provide: I18NEXT_NAMESPACE,
                            useValue: ''
                        },
                        {
                            provide: I18NEXT_SCOPE,
                            useValue: ''
                        },
                        I18NextPipe,
                        I18NextCapPipe,
                        I18NextFormatPipe,
                        I18NextTitle
                    ],
                    declarations: [
                        I18NextPipe,
                        I18NextCapPipe,
                        I18NextFormatPipe
                    ],
                    exports: [
                        I18NextPipe,
                        I18NextCapPipe,
                        I18NextFormatPipe
                    ]
                },] }
    ];
    return I18NextModule;
}());
/**
 * @param {?} value
 * @param {?} format
 * @param {?=} lng
 * @return {?}
 */
function defaultInterpolationFormat(value, format, lng) {
    if (lng === void 0) { lng = undefined; }
    if (!value)
        return value;
    switch (format) {
        case 'upper':
        case 'uppercase':
            return value.toUpperCase();
        case 'lower':
        case 'lowercase':
            return value.toLowerCase();
        case 'cap':
        case 'capitalize':
            return value.charAt(0).toUpperCase() + value.slice(1);
        case null:
        case undefined:
        case 'none':
        default:
            return value;
    }
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { resolver, i18nextNamespaceResolverFactory, defaultInterpolationFormat, I18NextModule, I18NEXT_SCOPE, I18NEXT_NAMESPACE, I18NEXT_SERVICE, I18NEXT_NAMESPACE_RESOLVER, I18NEXT_ERROR_HANDLING_STRATEGY, I18NextPipe, I18NextCapPipe, I18NextFormatPipe, I18NextService, I18NextTitle, NativeErrorHandlingStrategy, StrictErrorHandlingStrategy };

//# sourceMappingURL=angular-i18next.js.map